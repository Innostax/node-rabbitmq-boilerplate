version: "3.7"
services:
  # RabbitMQ Service (1 instance)
  rabbitmq:
    image: "rabbitmq:alpine"
    container_name: rabbitmq
    ports:
      - "5672:5672"   # AMQP port
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    # networks:
    #   - rabbitmq-net
    restart: always
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      retries: 5
      start_period: 20s
      timeout: 10s

  # Application microservice
  application:
    build: ./application
    container_name: application
    env_file:
      - ./application/.env.dev
    ports:
      - "8001:8001"
    # networks:
    #   - rabbitmq-net
    volumes:
      - .:/app/
      - /app/application/node_modules
    restart: always
    depends_on:
      rabbitmq:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/whoami"]  # Assuming your app has a health check endpoint
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

 
  database:
    image: postgres
    container_name: database
    restart: always
    ports:
      - 6543:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=12345
      - POSTGRES_DB=innostax_boilerplate
    volumes:
      - pgdata:/data/postgres
    
  migrate:
    build: ./database
    container_name: migrate
    env_file:
      - ./database/.env.dev
    depends_on:
      - database
    # networks:
    #   - rabbitmq-net
    volumes:
      - .:/app/
      - /app/database/node_modules

  nginx-proxy:
    build:
      dockerfile: Dockerfile
      context: ./proxy
    depends_on:
      application:
        condition: service_healthy                                                                                                                                                                                                                                                                                  
    ports:
      - 80:80

# networks:
#   rabbitmq-net:
#     driver: bridge

volumes:
  rabbitmq-data:
  pgdata:
    driver: local